// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:automation/v20231101:AutomationAccount":
		r = &AutomationAccount{}
	case "azure-native:automation/v20231101:Certificate":
		r = &Certificate{}
	case "azure-native:automation/v20231101:Connection":
		r = &Connection{}
	case "azure-native:automation/v20231101:ConnectionType":
		r = &ConnectionType{}
	case "azure-native:automation/v20231101:Credential":
		r = &Credential{}
	case "azure-native:automation/v20231101:DscConfiguration":
		r = &DscConfiguration{}
	case "azure-native:automation/v20231101:DscNodeConfiguration":
		r = &DscNodeConfiguration{}
	case "azure-native:automation/v20231101:HybridRunbookWorker":
		r = &HybridRunbookWorker{}
	case "azure-native:automation/v20231101:HybridRunbookWorkerGroup":
		r = &HybridRunbookWorkerGroup{}
	case "azure-native:automation/v20231101:JobSchedule":
		r = &JobSchedule{}
	case "azure-native:automation/v20231101:Module":
		r = &Module{}
	case "azure-native:automation/v20231101:PowerShell72Module":
		r = &PowerShell72Module{}
	case "azure-native:automation/v20231101:Python2Package":
		r = &Python2Package{}
	case "azure-native:automation/v20231101:Python3Package":
		r = &Python3Package{}
	case "azure-native:automation/v20231101:Runbook":
		r = &Runbook{}
	case "azure-native:automation/v20231101:Schedule":
		r = &Schedule{}
	case "azure-native:automation/v20231101:SourceControl":
		r = &SourceControl{}
	case "azure-native:automation/v20231101:Variable":
		r = &Variable{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"automation/v20231101",
		&module{version},
	)
}
